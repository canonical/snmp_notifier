name: Build and release SNMP Notifier 
on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string

permissions:
  contents: write

jobs:

  build:
    name: Build SNMP notifier 
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout maxwo/snmp_notifier, tag ${{inputs.release}}
        uses: actions/checkout@v2
        with:
          repository: maxwo/snmp_notifier
          ref: ${{inputs.release}}
          fetch-depth: 1
          path: ./upstream
      - name: Checkout ${{github.repository}}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ./local
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Build binary 
        working-directory: upstream 
        run: |
          go build -o snmp_notifier . 
      - name: Upload artifact 
        uses: actions/upload-artifact@v3
        with:
          name: snmp_notifier 
          path: ./upstream

  tag:
    name: Publish SNMP Notifier release to ${{github.repository}}
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      RELEASE: ${{inputs.release}}
    steps:
      - name: Checkout maxwo/snmp_notifier, tag ${{inputs.release}}
        uses: actions/checkout@v2
        with:
          repository: maxwo/snmp_notifier
          ref: ${{inputs.release}}
          fetch-depth: 1
          path: ./upstream
      - name: Checkout ${{github.repository}}, ${{github.ref}}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ./local
      - name: Create shallow tag
        run: |
          initial_operator_commit=$(cd ./local && git log ${{github.ref}} --oneline | tail -1 | awk '{ print $1 }')
          cd ./local
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add charm ../local
          git fetch charm
          git rebase "${initial_operator_commit}" --strategy-option ours

          echo "Removing build automation from the commit"

          git rm -rf .github || true
          git rm -rf .circleci || true
          git rm -rf .drone || true
          git rm .golangci.yml || true

          echo "Creating the new commit"

          git commit --amend --no-edit

          echo "Creating the new tag"

          git tag "${RELEASE}"

          echo "Pushing the tag to the local ${{github.repository}} clone"

          git push charm "${RELEASE}"

          echo "Pushing the tag to the upstream ${{github.repository}} repository"

          cd ../local
          git push origin "${RELEASE}"

  release:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Download the artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: List artifacts
        run: |
          find .
      - name: Prepare artifacts for release
        run: |
          mkdir release
          for f in artifacts/snmp_notifier; do cp "${f}/snmp_notifier" "release/$(basename ${f})"; done
          cd release
          for f in *; do gzip ${f}; done
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          name: "SNMP Notifier ${{inputs.release}}"
          body: |
            Build for SNMP Notifier, based on the [upstream '${{inputs.release}}'](https://github.com/maxwo/snmp_notifier/releases/tag/${{inputs.release}}) release of the `maxwo/snmp_notifier` project.
          artifacts: release/*
          tag: ${{inputs.release}}
          token: ${{ secrets.GITHUB_TOKEN }}
